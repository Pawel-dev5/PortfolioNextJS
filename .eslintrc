{
	"extends": ["airbnb", "next", "prettier", "next/core-web-vitals"],
	"plugins": ["prettier"],
	"env": {
		"jest": true,
		"node": true,
		"browser": true,
		"es2021": true
	},
	"parserOptions": {
		"requireConfigFile": false,
		"ecmaVersion": "latest",
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"globals": {
		"document": true,
		"window": true
	},
	"rules": {
		// =========================
		// --> turn the rule off <--
		// =========================
		"linebreak-style": 0,
		"react/no-children-prop": 0,
		"import/no-unresolved": 0,
		"react/no-array-index-key": 0,
		"react/no-danger": 0,
		"@next/next/no-img-element": "off",
		"react/react-in-jsx-scope": 0, // React 17+ provide support for a new version of the JSX transform
		"react/require-default-props": 0, // DefaultProps => object default values
		"import/prefer-default-export": 0,
		"no-param-reassign": 0, // Redux toolkit - linting state mutations
		// =====================================
		// --> turn the rule on as a warning <--
		// =====================================
		"no-unused-vars": 1,
		"react/jsx-filename-extension": [
			1,
			{
				"extensions": [".ts", ".tsx"]
			}
		],
		// ====================================
		// --> turn the rule on as an error <--
		// ====================================
		"react/function-component-definition": [
			2,
			{
				"namedComponents": "arrow-function"
			}
		], // This rule is aimed to enforce consistent function types for function components.
		"react/jsx-no-useless-fragment": [
			2,
			{
				"allowExpressions": true
			}
		],
		"no-plusplus": [
			2,
			{
				"allowForLoopAfterthoughts": true
			}
		],
		"radix": [2, "as-needed"],
		"react/jsx-props-no-spreading": [
			2,
			{
				"html": "ignore",
				"custom": "ignore",
				"explicitSpread": "ignore",
				"exceptions": [""]
			}
		],
		// ==============================
		// --> START propsTypes rules <--
		// ==============================
		"react/prop-types": 0,
		"react/forbid-prop-types": 0
		// ============================
		// --> END propsTypes rules <--
		// ============================
	}
}
